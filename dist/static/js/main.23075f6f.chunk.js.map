{"version":3,"sources":["siibrahim.png","mchasibrahim.png","component/layout/SignedInLinks.js","store/actions/authActions.js","component/layout/SignedOutLinks.js","component/layout/Navbar.js","component/projects/ProjectSummary.js","component/projects/ProjectList.js","component/dashboard/Notifications.js","component/dashboard/Dashboard.js","component/projects/ProjectDetails.js","component/auth/SignIn.js","component/auth/SignUp.js","component/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["module","exports","connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","initials","SignedOutLinks","state","firebase","profile","console","log","links","uid","src","Mchasibrahim","alt","Sibrahim","ProjectSummary","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","projiyat","map","projet","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","project","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","add","authorId","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","authSucced","message","projectReducer","error","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23075f6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/siibrahim.2f6a87cf.png\";","module.exports = __webpack_public_path__ + \"static/media/mchasibrahim.171eb6aa.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating green lighten-1'>{props.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) =>{\r\n    return (dispatch, getState,{ getFirebase })=>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=> {\r\n            //console.log(getState());\r\n            dispatch({ type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err});\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n    }\r\n  }\r\n\r\n  export const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign up</NavLink></li>\r\n            <li><NavLink to='/signin'>Sign in</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Sibrahim from '../../siibrahim.png';\r\nimport Mchasibrahim from '../../mchasibrahim.png';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    console.log(profile);\r\n    const links = auth.uid ? \r\n    <div className=\"container\">\r\n        <img src={Mchasibrahim} alt=\"Mchasibrahim\"/>\r\n        <Link to='/' className=\"brand-logo left\"> Allez SI IBRAHIM</Link>\r\n        <SignedInLinks {...profile} />\r\n    </div>\r\n    :\r\n    <div className=\"container\">\r\n        <img src={Sibrahim} alt=\"Sibrahim\"/>\r\n        <Link to='/' className=\"brand-logo left\"> Allez SI IBRAHIM</Link>\r\n        <SignedOutLinks /> \r\n    </div>;\r\n    return(\r\n        <nav className=\"nav wrapper grey darken 2\">\r\n            {links}\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    //console.log(state)\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = (props) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{props.title}</span>\r\n        <p>Posted by {props.authorFirstName} {props.authorLastName}</p>\r\n        <p className=\"grey-text\">{ moment(props.createdAt.toDate()).calendar() }</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n\r\n  let projiyat = projects && projects.map( projet => {\r\n    return(\r\n      <NavLink to={'/project/'+ projet.id} key={projet.id} >\r\n        <ProjectSummary {...projet} />\r\n      </NavLink>\r\n    )\r\n  })\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projiyat}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList;\r\n\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"online-users\">\r\n            { notifications && notifications.map(item =>{\r\n              return <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span>{item.content}</span>\r\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n              </li>\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    \r\n    // console.log(this.props);\r\n    const { projects, auth, notifications } = this.props;\r\n    //Root gards \r\n    //pour ne pas entrer a une page sans que tu sois auth\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications  notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\n/* ici on introduit compose car on enveloppe notre compoenent avec 2 higher order \r\ncomponent */\r\n\r\n/*le firestoreConnect fait que quand le component est active we should listen \r\nto the projects collections*/\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit:3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project } = props;\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{ moment(project.createdAt.toDate()).calendar() }</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{\r\n    collection: 'projects'\r\n  }])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              { authError? <p>{authError}</p>: null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '' ,\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n   }\r\n  render() {\r\n    if(!this.props.auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n    //profile: ownProps.\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","\r\n/*Redux Thunk middleware allows you to write action creators that return a function instead of an action. \r\nThe thunk can be used to delay the dispatch of an action, or to dispatch only if a certain condition is met*/\r\n\r\n//alors la on prend le projet on l'envoie a l'action\r\n\r\n//on ne dispatch pas directement mais on peut effectuer quelques async call\r\n//apres on dispatch\r\n\r\n//F ACTION 3ADIYA ON RENVOYAIT UNE ACTION ZE3MA UN OBJJET (type,contenu'payload') l reducer\r\n//avce thunk on renvoie une fonction\r\n\r\n//IN THUNK WE HOLD THE DISPATCHER\r\n\r\nexport const createProject = (project) => {\r\n  return (dispatch, getState, {getFirestore}) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: getState().firebase.profile.firstName ,\r\n      authorLastName: getState().firebase.profile.lastName,\r\n      authorId: getState().firebase.auth.uid,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT', project });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n    });\r\n  }\r\n};","import React, {Component} from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport  Navbar  from './component/layout/Navbar';\nimport Dashboard from './component/dashboard/Dashboard';\nimport ProjectDetails from './component/projects/ProjectDetails';\nimport SignIn from './component/auth/SignIn';\nimport SignUp from './component/auth/SignUp';\nimport CreateProject from './component/projects/CreateProject';\n\n\nclass App extends Component {\n  \n  render (){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route  path='/signin' component={SignIn} />\n            <Route  path='/signup' component={SignUp} />\n            <Route  path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n\r\n}\r\n\r\nconst authReducer = (state = initState,action) => {\r\n\r\n     switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log(\"auth error\");\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed !',\r\n                authSucced: null\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log(\"auth succeed\");\r\n            return {\r\n                ...state,\r\n                authSucced:'Welcome !',\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log(\"Signout success\");\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log(\"Signup success\");\r\n            return state;\r\n        case 'SIGNUP_ERROR':\r\n            console.log(\"Signup error\");\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n        default:\r\n            return state;\r\n     }\r\n    \r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'Allez si Ibrahim', content: 'blah blah blah'},\r\n        {id: '2', title: 'Momkin te3tini wa7ed project', content: 'blah blah blah'},\r\n        {id: '3', title: 'Wa bghina sataaaat a lambi', content: 'blah blah blah'}\r\n      ]\r\n}\r\n\r\nconst projectReducer = (state = initState,action) => {\r\n\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('project created', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.error);\r\n            return state;\r\n        default: \r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","  import firebase from 'firebase';  \r\n  import 'firebase/firestore';\r\n  import 'firebase/auth';\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyAPdCKlIwYO8FZzOaZeEi7PyDLL3l6ThFY\",\r\n    authDomain: \"net-ninja-marioplan-5409c.firebaseapp.com\",\r\n    databaseURL: \"https://net-ninja-marioplan-5409c.firebaseio.com\",\r\n    projectId: \"net-ninja-marioplan-5409c\",\r\n    storageBucket: \"net-ninja-marioplan-5409c.appspot.com\",\r\n    messagingSenderId: \"454687377839\",\r\n    appId: \"1:454687377839:web:0ce6cfde6e30d0c00bc75a\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  //firebase.firestore().settings({ timestampsInSnapshots: true});\r\n\r\n  export default firebase; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\n\n//whithExtraArgument function permet de passer un autre argument a l'action \n//Homa had 2 {getFirebase, getFirestore}\n\n// A STORE ENHACER IS A MIDDLEWARE\n//A STORE CAN HAVE ONE OR MANY STORE ENHACERS BY USING COMPOSE\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),//redux binding for firestore *connect the project to the config\n        //les attributs qu'on a ajoute d profile c pr retirer les infos d user\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile:'users', attachAuthIsReady : true})//redux binding for firebase *connect the project to the confi\n    )\n);\n\n//Pour n'envoyer le resultat au dom qu'apres qu'on a charge authentification\n//tat3raf rassek wach nadi ola la m authentifi 3ad at chouf ach at rendri\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}